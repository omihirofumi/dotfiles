eval "$(/opt/homebrew/bin/brew shellenv)"
eval "$(/opt/homebrew/bin/mise activate zsh)"
eval "$(starship init zsh)"
eval "$(thefuck --alias)"

source <(fzf --zsh)

######## PATH #######################
export ZPLUG_HOME=/opt/homebrew/opt/zplug
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#808080"
export HOMEBREW_BREWFILE=~/.Brewfile
# Colima + Testcontainers設定
export DOCKER_HOST="unix://${HOME}/.colima/default/docker.sock"
export TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE=/var/run/docker.sock

######## bindkey ####################
# ctrl + M for ghostty
bindkey '\e[109;5u' accept-line


######## alias ######################
alias g=git
alias lgit=lazygit
alias lg=lazygit
alias cat=bat
alias ls='eza -l'

############################### zPlug [START] ###################################
source $ZPLUG_HOME/init.zsh
# Load theme file
zplug 'zplug/zplug', hook-build:'zplug --self-manage'
# 非同期処理できるようになる
zplug "mafredri/zsh-async"
# テーマ(ここは好みで。調べた感じpureが人気)
# zplug "sindresorhus/pure"
# 構文のハイライト(https://github.com/zsh-users/zsh-syntax-highlighting)
zplug "zsh-users/zsh-syntax-highlighting"
# コマンド入力途中で上下キー押したときの過去履歴がいい感じに出るようになる
zplug "zsh-users/zsh-history-substring-search"
# 過去に入力したコマンドの履歴が灰色のサジェストで出る
zplug "zsh-users/zsh-autosuggestions"
# 補完強化
zplug "zsh-users/zsh-completions"
# 256色表示にする
zplug "chrissicool/zsh-256color"
# コマンドライン上の文字リテラルの絵文字を emoji 化する
zplug "mrowa44/emojify", as:command
# z
zplug "agkozak/zsh-z"

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi
zplug load
############################### zplug [END] ###################################

# zsh-autosuggestions設定
export ZSH_AUTOSUGGEST_STRATEGY=(history completion)

############################## functions [START] ##############################
# fzf x ghq
function fzf-src () {
  local selected_dir=$(ghq list -p | fzf --reverse)
  if [ -n "$selected_dir" ]; then
    BUFFER="cd ${selected_dir}"
    zle accept-line
  fi
  zle clear-screen
}
zle -N fzf-src
bindkey '^]' fzf-src


# fzf x development
function fzf-dev () {
  local selected_dir=$(find ~/Development -type d -mindepth 1 -maxdepth 3 \
    -not -path "*/.*" \
    -not -path "*/node_modules*" \
    -not -path "*/target*" \
    -not -path "*/build*" | \
    sed "s|$HOME/||" | \
    fzf --reverse --preview 'ls -la ~/{}'
  )
  if [ -n "$selected_dir" ]; then
    BUFFER="cd ~/${selected_dir}"
    zle accept-line
  fi
  zle clear-screen
}
zle -N fzf-dev
bindkey '^g' fzf-dev


# fzf x git-worktree
function fzf-worktree() {
  local selected_worktree=$(git worktree list --porcelain 2>/dev/null | \
    awk '
      /worktree / {worktree=$2} 
      /branch / {branch=substr($2, 12); print branch ":" worktree}
    ' | \
    fzf --reverse --delimiter ':' --with-nth 1 \
        --preview 'git -C {2} log --oneline -10 2>/dev/null || echo "No git history available"' | \
    cut -d':' -f2
  )
  if [ -n "$selected_worktree" ]; then
    BUFFER="cd ${selected_worktree}"
    zle accept-line
  fi
  zle clear-screen
}
zle -N fzf-worktree
bindkey '^j' fzf-worktree

# pr [-a] => gh dash
function pr() {
    if [[ "$1" == "-a" ]]; then
        (cd ~ && gh dash)
    else
        gh dash "$@"
    fi
}

############################## functions [END] ###############################

### MANAGED BY RANCHER DESKTOP START (DO NOT EDIT)
export PATH="/Users/hirofumi.omi/.rd/bin:$PATH"
### MANAGED BY RANCHER DESKTOP END (DO NOT EDIT)
export PATH="/opt/homebrew/opt/libpq/bin:$PATH"
